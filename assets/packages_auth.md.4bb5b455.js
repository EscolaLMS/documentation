import{_ as s,o as a,c as e,V as n}from"./chunks/framework.c495fe11.js";const y=JSON.parse('{"title":"Auth","description":"","frontmatter":{},"headers":[],"relativePath":"packages/auth.md","filePath":"packages/auth.md"}'),o={name:"packages/auth.md"},t=n(`<h1 id="auth" tabindex="-1">Auth <a class="header-anchor" href="#auth" aria-label="Permalink to &quot;Auth&quot;">​</a></h1><p><a href="https://escolalms.github.io/Auth/" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/documentation-swagger-green" alt="swagger"></a><a href="https://codecov.io/gh/EscolaLMS/Auth" target="_blank" rel="noreferrer"><img src="https://codecov.io/gh/EscolaLMS/Auth/branch/main/graph/badge.svg?token=O91FHNKI6R" alt="codecov"></a><a href="https://github.com/EscolaLMS/Core/actions/workflows/test.yml" target="_blank" rel="noreferrer"><img src="https://github.com/EscolaLMS/Auth/actions/workflows/test.yml/badge.svg" alt="phpunit"></a><a href="https://packagist.org/packages/escolalms/auth" target="_blank" rel="noreferrer"><img src="https://img.shields.io/packagist/dt/escolalms/auth" alt="downloads"></a><a href="https://packagist.org/packages/escolalms/auth" target="_blank" rel="noreferrer"><img src="https://img.shields.io/packagist/v/escolalms/auth" alt="downloads"></a><a href="https://packagist.org/packages/escolalms/auth" target="_blank" rel="noreferrer"><img src="https://img.shields.io/packagist/l/escolalms/auth" alt="downloads"></a><a href="https://codeclimate.com/github/EscolaLMS/Auth/maintainability" target="_blank" rel="noreferrer"><img src="https://api.codeclimate.com/v1/badges/b8df1362d2c9363e6e6e/maintainability" alt="Maintainability"></a><a href="https://dashboard.stryker-mutator.io/reports/github.com/EscolaLMS/Auth/main" target="_blank" rel="noreferrer"><img src="https://img.shields.io/endpoint?style=flat&amp;url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2FEscolaLMS%2FAuth%2Fmain" alt="Mutation testing badge"></a></p><h2 id="what-does-it-do" tabindex="-1">What does it do <a class="header-anchor" href="#what-does-it-do" aria-label="Permalink to &quot;What does it do&quot;">​</a></h2><p>Package for user authentication. In addition, the package includes:</p><ul><li>user management,</li><li>group management,</li><li>profile management,</li><li>registration.</li></ul><h2 id="installing" tabindex="-1">Installing <a class="header-anchor" href="#installing" aria-label="Permalink to &quot;Installing&quot;">​</a></h2><ul><li><code>composer require escolalms/auth</code></li><li><code>php artisan migrate</code></li><li><code>php artisan db:seed --class=&quot;EscolaLms\\Auth\\Database\\Seeders\\AuthPermissionSeeder&quot;</code></li></ul><p>Optional:</p><ul><li>Run command <code>escolalms:admin</code>.</li></ul><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;Commands&quot;">​</a></h2><ul><li><code>escolalms:admin</code> - create account with role admin</li></ul><h2 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;Database&quot;">​</a></h2><ol><li><code>category_user</code> - Table is used to store the user categories.</li><li><code>groups</code> - Table for storing groups.</li><li><code>group_user</code> - Table for storing groups assigned to the user.</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">User 1 -&gt; n Categories</span></span>
<span class="line"><span style="color:#A6ACCD;">User 1 -&gt; n Groups</span></span></code></pre></div><h2 id="endpoints" tabindex="-1">Endpoints <a class="header-anchor" href="#endpoints" aria-label="Permalink to &quot;Endpoints&quot;">​</a></h2><p>All the endpoints are defined in <a href="https://escolalms.github.io/Auth/" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/documentation-swagger-green" alt="swagger"></a></p><h2 id="tests" tabindex="-1">Tests <a class="header-anchor" href="#tests" aria-label="Permalink to &quot;Tests&quot;">​</a></h2><p>Run <code>./vendor/bin/phpunit</code> to run tests. <a href="https://github.com/EscolaLMS/Core/actions/workflows/test.yml" target="_blank" rel="noreferrer"><img src="https://github.com/EscolaLMS/Auth/actions/workflows/test.yml/badge.svg" alt="phpunit"></a><a href="https://codecov.io/gh/EscolaLMS/Auth" target="_blank" rel="noreferrer"><img src="https://codecov.io/gh/EscolaLMS/Auth/branch/main/graph/badge.svg?token=O91FHNKI6R" alt="codecov"></a></p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><ul><li><code>AccountBlocked</code> - Event is dispatched after blocking the user&#39;s account (<code>is_active=false</code>).</li><li><code>AccountConfirmed</code> - Event is dispatched after the user verifies the account.</li><li><code>AccountDeleted</code> - Event is dispatched after deleting the user.</li><li><code>AccountMustBeEnableByAdmin</code> - Event is dispatched when the user registers and <code>Config::get(&#39;escola_auth.account_must_be_enabled_by_admin&#39;) === SettingStatusEnum::ENABLED</code></li><li><code>AccountRegistered</code> - Event is dispatched after the account is registered.</li><li><code>ForgotPassword</code> - Event is dispatched when a password reset request is sent.</li><li><code>Login</code> - Event is dispatched on successful login.</li><li><code>Logout</code> - Event is dispatched after logout.</li><li><code>PasswordChanged</code> - Event is dispatched after the password changed.</li><li><code>ResetPassword</code> - Event is dispatched after resetting the password.</li><li><code>UserAddedToGroup</code> - Event is dispatched after adding the user to the group.</li><li><code>UserRemovedFromGroup</code> - Event is dispatched after removing the user from the group.</li></ul><h2 id="listeners" tabindex="-1">Listeners <a class="header-anchor" href="#listeners" aria-label="Permalink to &quot;Listeners&quot;">​</a></h2><ul><li><code>CreatePasswordResetToken</code> - The listener listens for the ForgotPassword event and executes the following method.</li></ul><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handle</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ForgotPassword</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">void</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">is_callable</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getRunEventForgotPassword</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getRunEventForgotPassword</span><span style="color:#89DDFF;">()())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">user </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">getUser</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">$this-&gt;</span><span style="color:#A6ACCD;">userRepository</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">update</span><span style="color:#89DDFF;">([</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">password_reset_token</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Str</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">random</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">getKey</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">refresh</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">notify</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ResetPassword</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">password_reset_token</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">getReturnUrl</span><span style="color:#89DDFF;">()));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>This is useful if you are using <a href="https://github.com/EscolaLMS/Templates-Email" target="_blank" rel="noreferrer">TemplateEmail</a> and you don&#39;t want to send the default e-mails.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">CreatePasswordResetToken</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">setRunEventForgotPassword</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">templateRepository </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">app</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TemplateRepositoryContract</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">empty</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">templateRepository</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">findTemplateDefault</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">ForgotPassword</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">EmailChannel</span><span style="color:#89DDFF;">::</span><span style="color:#F78C6C;">class</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">);</span></span></code></pre></div><ul><li><code>SendEmailVerificationNotification</code> - The listener listens for the AccountRegistered event and executes the following method.</li></ul><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handle</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Registered</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">is_callable</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getRunEventEmailVerification</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">self</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getRunEventEmailVerification</span><span style="color:#89DDFF;">()())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">user </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MustVerifyEmail</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!$</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">hasVerifiedEmail</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">sendEmailVerificationNotification</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="how-to-use-this-on-frontend" tabindex="-1">How to use this on frontend <a class="header-anchor" href="#how-to-use-this-on-frontend" aria-label="Permalink to &quot;How to use this on frontend&quot;">​</a></h2><h3 id="admin-panel" tabindex="-1">Admin panel <a class="header-anchor" href="#admin-panel" aria-label="Permalink to &quot;Admin panel&quot;">​</a></h3><p><strong>List of users</strong><img src="https://raw.githubusercontent.com/EscolaLMS/Auth/main/docs/list_of_users.png" alt="List of users" title="List of users"></p><p><strong>Creating/editing user</strong><img src="https://raw.githubusercontent.com/EscolaLMS/Auth/main/docs/user_form.png" alt="Creating/editing user" title="User form"></p><p><strong>User categories</strong><img src="https://raw.githubusercontent.com/EscolaLMS/Auth/main/docs/user_categories.png" alt="User categories" title="User categories"></p><p><strong>List of groups</strong><img src="https://raw.githubusercontent.com/EscolaLMS/Auth/main/docs/list_of_groups.png" alt="List of groups" title="List of groups"></p><p><strong>Creating/editing group</strong><img src="https://raw.githubusercontent.com/EscolaLMS/Auth/main/docs/group_form.png" alt="Creating/editing group" title="Creating/editing group"></p><p><strong>My profile</strong><img src="https://raw.githubusercontent.com/EscolaLMS/Auth/main/docs/my_profile.png" alt="My profile" title="My profile"></p><h2 id="permissions" tabindex="-1">Permissions <a class="header-anchor" href="#permissions" aria-label="Permalink to &quot;Permissions&quot;">​</a></h2><p>Permissions are defined in <a href="https://github.com/EscolaLMS/Auth/tree/main/database/seeders/AuthPermissionSeeder.php" target="_blank" rel="noreferrer">seeder</a>.</p>`,37),l=[t];function p(r,c,i,d,F,D){return a(),e("div",null,l)}const A=s(o,[["render",p]]);export{y as __pageData,A as default};
