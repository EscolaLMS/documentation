import{_ as s,o as a,c as e,V as n}from"./chunks/framework.c495fe11.js";const m=JSON.parse('{"title":"Escola LMS (Wellms) TypeScript Definitions","description":"","frontmatter":{},"headers":[],"relativePath":"packages/ts-models.md","filePath":"packages/ts-models.md"}'),o={name:"packages/ts-models.md"},l=n(`<h1 id="escola-lms-wellms-typescript-definitions" tabindex="-1">Escola LMS (Wellms) TypeScript Definitions <a class="header-anchor" href="#escola-lms-wellms-typescript-definitions" aria-label="Permalink to &quot;Escola LMS (Wellms) TypeScript Definitions&quot;">​</a></h1><p><a href="https://www.npmjs.com/package/@escolalms/ts-models" target="_blank" rel="noreferrer">npm</a> | <a href="https://escolalms.github.io/ts-models/" target="_blank" rel="noreferrer">typedoc page</a></p><h2 id="automatic-transformation-of-eloquent-models-and-request-rules-to-typescript-definition" tabindex="-1">Automatic transformation of Eloquent Models and Request rules to TypeScript Definition <a class="header-anchor" href="#automatic-transformation-of-eloquent-models-and-request-rules-to-typescript-definition" aria-label="Permalink to &quot;Automatic transformation of Eloquent Models and Request rules to TypeScript Definition&quot;">​</a></h2><p>This package transforms all Eloquent Models defined in</p><ul><li>main <a href="https://github.com/EscolaLMS/ts-models/tree/main/composer.json" target="_blank" rel="noreferrer">composer.json</a></li><li>config <a href="https://github.com/EscolaLMS/ts-models/tree/main/config/typescript.php" target="_blank" rel="noreferrer">typescript.php</a></li></ul><p>to Typescript definitions</p><ul><li>pure <a href="https://github.com/EscolaLMS/ts-models/tree/main/models.d.ts" target="_blank" rel="noreferrer">definitions</a></li><li>generated <a href="https://escolalms.github.io/ts-models/" target="_blank" rel="noreferrer">typedoc</a></li></ul><h2 id="installing" tabindex="-1">Installing <a class="header-anchor" href="#installing" aria-label="Permalink to &quot;Installing&quot;">​</a></h2><ol><li>install dependencies <code>npm i @escolalms/ts-models</code> or <code>yarn add @escolalms/ts-models</code></li><li>import in main <code>index.d.ts</code> (if you have one)</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@escolalms/ts-models</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ol start="3"><li>add this to <code>tsconfig</code> in include section</li></ol><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">include</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node_modules/@escolalms/ts-models</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span></code></pre></div><p>The above is declaring namespaces, example ns <code>EscolaLms.StationaryEvents.Models.StationaryEvent</code> that are take from PHP namespace.</p><p>Below is example</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stationaryEvents</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">API</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">PaginationParams</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">&lt;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">API</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DefaultMetaResponse</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">EscolaLms</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">StationaryEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Models</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">StationaryEvent</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">/api/admin/stationary-events</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    method</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    params</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="adding-new-packages" tabindex="-1">Adding new packages <a class="header-anchor" href="#adding-new-packages" aria-label="Permalink to &quot;Adding new packages&quot;">​</a></h2><ol><li>Add new package to <a href="https://github.com/EscolaLMS/ts-models/tree/main/composer.json" target="_blank" rel="noreferrer">composer.json</a></li><li>Set proper namespace and package path in the config <a href="https://github.com/EscolaLMS/ts-models/tree/main/config/typescript.php" target="_blank" rel="noreferrer">typescript.php</a></li></ol><h2 id="releasing-new-version-to-npm" tabindex="-1">Releasing new version to <code>npm</code> <a class="header-anchor" href="#releasing-new-version-to-npm" aria-label="Permalink to &quot;Releasing new version to \`npm\`&quot;">​</a></h2><ol><li>Run <a href="https://github.com/EscolaLMS/ts-models/actions/workflows/generate.yaml" target="_blank" rel="noreferrer">generate</a> action on main branch by pressing <code>re-run all jobs</code></li><li>Wait until it&#39;s finished, new <a href="https://github.com/EscolaLMS/ts-models/tree/main/models.d.ts" target="_blank" rel="noreferrer">models.d.ts</a> should be pushed automatically to the repository</li><li>Once new <a href="models.d.ts">models.d.ts</a> You create <a href="https://github.com/EscolaLMS/ts-models/releases/new" target="_blank" rel="noreferrer">new release</a> rest should be handled by <a href=".github/workflows/release.yaml">the script</a></li><li>Release version on GH is the same as on <a href="https://www.npmjs.com/package/@escolalms/ts-models" target="_blank" rel="noreferrer">npm</a> (done automatically)</li></ol>`,19),t=[l];function p(r,c,i,y,D,d){return a(),e("div",null,t)}const h=s(o,[["render",p]]);export{m as __pageData,h as default};
