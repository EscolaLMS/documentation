import{_ as s,o as a,c as e,V as o}from"./chunks/framework.c495fe11.js";const F=JSON.parse('{"title":"Template of Escola LMS Packages","description":"","frontmatter":{},"headers":[],"relativePath":"packages/gh-actions-template.md","filePath":"packages/gh-actions-template.md"}'),n={name:"packages/gh-actions-template.md"},l=o(`<h1 id="template-of-escola-lms-packages" tabindex="-1">Template of Escola LMS Packages <a class="header-anchor" href="#template-of-escola-lms-packages" aria-label="Permalink to &quot;Template of Escola LMS Packages&quot;">​</a></h1><p>Each Escola LMS package should contain</p><ol><li>Licence MIT</li><li>Definitions of Tests as Github Actions</li><li>codecov Tests CodeCoverage</li><li>Readme file</li><li>Codeclimate (quality &amp; cc)</li><li>GitGuardian</li><li>Badges</li></ol><h2 id="laravel-php-package" tabindex="-1">Laravel PHP Package <a class="header-anchor" href="#laravel-php-package" aria-label="Permalink to &quot;Laravel PHP Package&quot;">​</a></h2><p>Each Escola LMS Laravel PHP Package should contain</p><ol><li>PhpUnit tests for L8, mysql, postgres, php7.4 &amp; php8.0. Test are launched with <a href="https://github.com/orchestral/testbench" target="_blank" rel="noreferrer">testbench</a></li><li>PhpUnit with code covarage uploaded to codecov and codeclimate</li><li>Swagger documentation as github pages.</li></ol><p>All this are in <a href="https://github.com/EscolaLMS/GH-Actions-Template/tree/main/php" target="_blank" rel="noreferrer">php</a> folder. To enable above just copy files to your package and change settings.</p><h2 id="swagger-generation-to-github-pages" tabindex="-1">Swagger generation to Github pages <a class="header-anchor" href="#swagger-generation-to-github-pages" aria-label="Permalink to &quot;Swagger generation to Github pages&quot;">​</a></h2><p>Each API package should publish it&#39;s own swagger documentation, yet is should not have <code>@OA\\Info(title=\\&quot;EscolaLMS\\&quot;, version=\\&quot;0.0.1\\&quot;)</code> in base controller because the there can be only one <code>@OA\\Info</code> globally.</p><p>We have one general repository for <a href="https://github.com/EscolaLMS/API" target="_blank" rel="noreferrer">API</a> that generates one swagger documentation from all packages.</p><p>To generate swagger for repository please instead of <code>@OA\\Info</code> add <code>SWAGGER_VERSION</code> string then replace it in <code>yml</code> Github action, eg</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add Swagger main annotaion</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">php -r &quot;file_put_contents(&#39;src/HeadlessH5PServiceProvider.php&#39;, str_replace(&#39;SWAGGER_VERSION&#39;, &#39;@OA\\Info(title=\\&quot;EscolaLMS\\&quot;, version=\\&quot;0.0.1\\&quot;)&#39;, file_get_contents(&#39;src/HeadlessH5PServiceProvider.php&#39;)));&quot;</span></span></code></pre></div><h3 id="how-to-use-this-as-package" tabindex="-1">How to use this as package. <a class="header-anchor" href="#how-to-use-this-as-package" aria-label="Permalink to &quot;How to use this as package.&quot;">​</a></h3><p>Repeat those steps for each package</p><ol><li><p>Clone your package to a folder inside this repo, in <code>packages</code> folder (<code>git clone XXX package</code>). Add your folder to <code>.gitignore</code></p></li><li><p>Amend Host Laravel <code>composer.json</code></p></li></ol><p>Before:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">repositories</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>After:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">repositories</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">escolalms/headless-h5p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../packages/headless-h5p</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Example with 2 packages</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">repositories</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">escolalms/headless-h5p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../packages/headless-h5p</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">escolalms/courses</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../packages/courses</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Working with packages <code>versions</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">repositories</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">escolalms/courses</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">packages/courses</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">options</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">versions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">escolalms/courses</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.2.20</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}]</span></span></code></pre></div><p>Note that name (<code>escolalms/headless-h5p</code> in example above) <strong>MUST</strong> match one you have in <code>package/composer.json</code></p><p>2.1. (Optional) In case you&#39;ll be generating your own swagger documentation you might want to alter <code>host/config/l5-swagger.php</code> as follows:</p><p>Before:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&#39;annotations&#39; =&gt; [</span></span>
<span class="line"><span style="color:#A6ACCD;">               base_path(&#39;vendor/escolalms/headless-h5p/src&#39;),</span></span>
<span class="line"><span style="color:#A6ACCD;">               //base_path(&#39;app&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">],</span></span></code></pre></div><p>After:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&#39;annotations&#39; =&gt; [</span></span>
<span class="line"><span style="color:#A6ACCD;">               base_path(&#39;vendor/escolalms/mypackage/src&#39;),</span></span>
<span class="line"><span style="color:#A6ACCD;">               //base_path(&#39;app&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">],</span></span></code></pre></div><p>Above example is assuming that your package name is <code>mypackage</code>.</p><ol start="3"><li>Enter bash (instruction above), then add you packge with <code>composer require escolalms/headless-h5p</code></li></ol><p>That&#39;s it - now you have laravel working with docker that is using package from other folder that is <code>git</code> maintained.</p><h2 id="xdebug-remote-debbuging" tabindex="-1">Xdebug remote debbuging <a class="header-anchor" href="#xdebug-remote-debbuging" aria-label="Permalink to &quot;Xdebug remote debbuging&quot;">​</a></h2><p><em>Note</em> instruction below is for VSCODE, yet it should work with minor changes in other IDEs like PHPStorm.</p><ol><li>Add mapping to <code>.vscode/launch.json</code></li></ol><p>Before:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">configurations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Listen for Xdebug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">php</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">request</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">launch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">port</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9003</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">pathMappings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">/var/www/html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${workspaceFolder}/host</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span></code></pre></div><p>After:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">configurations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Listen for Xdebug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">php</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">request</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">launch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">port</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9003</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">pathMappings</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">/var/www/html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${workspaceFolder}/host</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">/var/www/package</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${workspaceFolder}/package</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span></code></pre></div><h2 id="react-components-package" tabindex="-1">React components package <a class="header-anchor" href="#react-components-package" aria-label="Permalink to &quot;React components package&quot;">​</a></h2><p>TODO</p><h2 id="admin-panel" tabindex="-1">Admin panel <a class="header-anchor" href="#admin-panel" aria-label="Permalink to &quot;Admin panel&quot;">​</a></h2><p>TODO</p><h2 id="api-laravel-packages" tabindex="-1">API Laravel packages <a class="header-anchor" href="#api-laravel-packages" aria-label="Permalink to &quot;API Laravel packages&quot;">​</a></h2><ul><li><code>main</code> branch as main branch 😃 do not use <code>develop</code> branch</li><li><code>feature/X</code> as feature branch <code>X</code> is number of issue in Gh Issues of repository</li><li>after MVP, use <code>release/X</code> branch</li><li>phpunit tests run by github actions (definitions in this repository)</li><li>phpunit code coverage pushed to <a href="https://codecov.io/gh" target="_blank" rel="noreferrer">https://codecov.io/gh</a></li><li>swagger documention push to github pages</li><li>repository registered to packagist in <code>escolalms/*</code> namespace with versioning in tag releases</li><li>badges: codecov, pipeline status, packagist downloads, packagist latest version, licence</li><li>all packages should be attached to <a href="https://github.com/EscolaLMS/API" target="_blank" rel="noreferrer">main API</a> repository as composer dependency</li><li>codeclimate for Static analys</li></ul><p>Classes (and files) that should be inside the package</p><ul><li>service provider</li><li>policy with auth provider</li><li>seeder for permissions for <a href="https://github.com/EscolaLMS/Core/blob/main/src/Enums/UserRole.php" target="_blank" rel="noreferrer">default roles</a></li><li>seeder for default content</li><li>tests</li><li>swagger annotations</li><li>readme.md with implementation details</li></ul><h3 id="badges-example" tabindex="-1">Badges example <a class="header-anchor" href="#badges-example" aria-label="Permalink to &quot;Badges example&quot;">​</a></h3><div class="language-markdown"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">swagger</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;text-decoration:underline;">https://img.shields.io/badge/documentation-swagger-green</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">https://escolalms.github.io/Auth/</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">codecov</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;text-decoration:underline;">https://codecov.io/gh/EscolaLMS/Auth/branch/main/graph/badge.svg?token=O91FHNKI6R</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">https://codecov.io/gh/EscolaLMS/Auth</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">phpunit</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;text-decoration:underline;">https://github.com/EscolaLMS/Auth/actions/workflows/test.yml/badge.svg</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">https://github.com/EscolaLMS/Core/actions/workflows/test.yml</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">downloads</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;text-decoration:underline;">https://img.shields.io/packagist/dt/escolalms/auth</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">https://packagist.org/packages/escolalms/auth</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">downloads</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;text-decoration:underline;">https://img.shields.io/packagist/v/escolalms/auth</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">https://packagist.org/packages/escolalms/auth</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">downloads</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;text-decoration:underline;">https://img.shields.io/packagist/l/escolalms/auth</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">https://packagist.org/packages/escolalms/auth</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h3 id="authorisation-with-testing" tabindex="-1">Authorisation (with Testing) <a class="header-anchor" href="#authorisation-with-testing" aria-label="Permalink to &quot;Authorisation (with Testing)&quot;">​</a></h3><p>TODO</p><h2 id="permissions-naming-pattern" tabindex="-1">Permissions naming pattern <a class="header-anchor" href="#permissions-naming-pattern" aria-label="Permalink to &quot;Permissions naming pattern&quot;">​</a></h2><p>Basic pattern:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[package-name?]_[model-name]_[action-name]_[modifier-name?]</span></span></code></pre></div><p>Sections are merged with <code>_</code></p><p>Multi-part names are merged with <code>-</code></p><hr><h3 id="packagename" tabindex="-1">PackageName <a class="header-anchor" href="#packagename" aria-label="Permalink to &quot;PackageName&quot;">​</a></h3><p><code>package-name</code> is the name of the repository to which the permission applies.</p><p>example: for <code>EscolaLMS/Cart</code> -&gt; <code>cart</code></p><h4 id="when-we-omit-the-package-name" tabindex="-1">When we omit the <code>package-name</code>: <a class="header-anchor" href="#when-we-omit-the-package-name" aria-label="Permalink to &quot;When we omit the \`package-name\`:&quot;">​</a></h4><h5 id="_1-when-the-package-name-is-named-the-same-as-the-model" tabindex="-1">1. When the package name is named the same as the model <a class="header-anchor" href="#_1-when-the-package-name-is-named-the-same-as-the-model" aria-label="Permalink to &quot;1. When the package name is named the same as the model&quot;">​</a></h5><p>e.g. <code>EscolaLMS/Categories</code>.</p><p>According to the basic pattern it would look like this:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">categories_category_create // wrong</span></span></code></pre></div><p>This does not make sense, so we omit the package name and create</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">category_create // good</span></span></code></pre></div><h5 id="_2-to-not-bind-the-permission-too-much-to-the-repository" tabindex="-1">2. To not bind the permission too much to the repository <a class="header-anchor" href="#_2-to-not-bind-the-permission-too-much-to-the-repository" aria-label="Permalink to &quot;2. To not bind the permission too much to the repository&quot;">​</a></h5><p>This gives a gateway to split the repository.</p><p>e.g. User management is currently in the <code>EscolaLMS/Auth</code> package. According to the basic pattern, the permission to create a user would look like this:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">auth_user_create // wrong</span></span></code></pre></div><p>In this case, it is worth omitting <code>auth</code> and eventually doing</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user_create // good</span></span></code></pre></div><hr><h3 id="modelname" tabindex="-1">ModelName <a class="header-anchor" href="#modelname" aria-label="Permalink to &quot;ModelName&quot;">​</a></h3><p><code>model-name</code> the name of the model/element that the action applies to. Always specify the model in the singular:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user-groups_create // wrong</span></span>
<span class="line"><span style="color:#A6ACCD;">user-groups_list // wrong</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user-group_create // good</span></span>
<span class="line"><span style="color:#A6ACCD;">user-group_list // good</span></span></code></pre></div><hr><h3 id="actionname" tabindex="-1">ActionName <a class="header-anchor" href="#actionname" aria-label="Permalink to &quot;ActionName&quot;">​</a></h3><p><code>action-name</code> is the name of the action we want to allow.</p><h4 id="standard-action-names" tabindex="-1">Standard action names: <a class="header-anchor" href="#standard-action-names" aria-label="Permalink to &quot;Standard action names:&quot;">​</a></h4><p><code>create</code> - create model (do not use <code>add</code> in this case)</p><p><code>read</code> - read a model (do not use <code>attend</code>, <code>display</code>, <code>show</code> in this case)</p><p><code>update</code> - edit the model (do not use <code>edit</code> in this case)</p><p><code>delete</code> - deleting a model (do not use <code>remove</code> in this case)</p><p><code>list</code> - read the list of the given model</p><p><code>manage</code> - when a general model management permission is needed that combines <code>create</code>, <code>read</code>, <code>update</code> and <code>delete</code></p><h4 id="actions-on-a-model-in-a-model" tabindex="-1">Actions on a model in a model: <a class="header-anchor" href="#actions-on-a-model-in-a-model" aria-label="Permalink to &quot;Actions on a model in a model:&quot;">​</a></h4><p>In some cases we need permission to create relationships between models.</p><p>We need to determine which model is the master model, and we put the sub-model into an action. Sub-model in the action is given as the first one, the proper action as the second one., e.g:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user-group_member-add // good</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user-group_add-member // wrong</span></span></code></pre></div><hr><h3 id="modifiername" tabindex="-1">ModifierName <a class="header-anchor" href="#modifiername" aria-label="Permalink to &quot;ModifierName&quot;">​</a></h3><p><code>modifier-name</code> is a modifier for the action. It is used when the action is used in a non-standard way.</p><p>Example: <code>user_update</code> vs <code>user_update_self</code> Both permissions allow you to edit a user, but in the second case you can only edit your own user (not any user).</p><h4 id="model-in-modifier" tabindex="-1">Model in modifier: <a class="header-anchor" href="#model-in-modifier" aria-label="Permalink to &quot;Model in modifier:&quot;">​</a></h4><p>Sometimes we need a permission for an action that depends on another model.</p><p>Example: We are the author of the course. We need a list of users who have joined it. We don&#39;t have permission to view all users (standard <code>user_list</code> is out).</p><p>You can do it like this for example:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user_list_course-owned</span></span></code></pre></div><p>The subModel in the modifier is given first, the proper modifier second.</p><p><strong>If you need more than one modifier in a given permission, you should consider whether the permission you are creating should be split.</strong></p><h4 id="avoid-modifiers-whenever-possible" tabindex="-1">Avoid modifiers whenever possible: <a class="header-anchor" href="#avoid-modifiers-whenever-possible" aria-label="Permalink to &quot;Avoid modifiers whenever possible:&quot;">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">user_list_any // wrong</span></span>
<span class="line"><span style="color:#A6ACCD;">user_list // good</span></span></code></pre></div><h4 id="standard-modifiers" tabindex="-1">Standard modifiers: <a class="header-anchor" href="#standard-modifiers" aria-label="Permalink to &quot;Standard modifiers:&quot;">​</a></h4><p><code>self</code> - for user-related actions (e.g. <code>user_update_self</code>, <code>user-group_update_self</code>)</p><hr><h3 id="permissions-for-views-in-admin-panel" tabindex="-1">Permissions for views in admin panel: <a class="header-anchor" href="#permissions-for-views-in-admin-panel" aria-label="Permalink to &quot;Permissions for views in admin panel:&quot;">​</a></h3><p><strong>PackageName</strong> - must be <code>dashboard-app</code></p><p><strong>ModelName</strong> - this is the name of the section or whole subpage</p><p><strong>ActionName</strong> - usually it will be simply <code>access</code></p><p>Example:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">dashboad-app_course-list_access</span></span></code></pre></div><hr><h3 id="permissions-for-views-in-the-client-front-application" tabindex="-1">Permissions for views in the client (front) application: <a class="header-anchor" href="#permissions-for-views-in-the-client-front-application" aria-label="Permalink to &quot;Permissions for views in the client (front) application:&quot;">​</a></h3><p><strong>PackageName</strong> - must be <code>client-app</code></p><p><strong>ModelName</strong> - is the name of the section or the whole subpage</p><p><strong>ActionName</strong> - usually it will be simply <code>access</code></p><p>Example:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">client-app_course-list_access</span></span></code></pre></div>`,122),p=[l];function t(c,r,i,d,D,h){return a(),e("div",null,p)}const u=s(n,[["render",t]]);export{F as __pageData,u as default};
