import{_ as e,o as t,c as o,V as a}from"./chunks/framework.c495fe11.js";const b=JSON.parse('{"title":"Youtube","description":"","frontmatter":{},"headers":[],"relativePath":"packages/youtube.md","filePath":"packages/youtube.md"}'),r={name:"packages/youtube.md"},s=a('<h1 id="youtube" tabindex="-1">Youtube <a class="header-anchor" href="#youtube" aria-label="Permalink to &quot;Youtube&quot;">​</a></h1><p>Package Youtube integration</p><p><a href="https://codecov.io/gh/EscolaLMS/Youtube" target="_blank" rel="noreferrer"><img src="https://codecov.io/gh/EscolaLMS/Youtube/branch/main/graph/badge.svg?token=NRAN4R8AGZ" alt="codecov"></a><a href="https://github.com/EscolaLMS/Youtube/actions/workflows/test.yml" target="_blank" rel="noreferrer"><img src="https://github.com/EscolaLMS/Youtube/actions/workflows/test.yml/badge.svg" alt="phpunit"></a><a href="https://packagist.org/packages/escolalms/youtube" target="_blank" rel="noreferrer"><img src="https://img.shields.io/packagist/dt/escolalms/youtube" alt="downloads"></a><a href="https://packagist.org/packages/escolalms/youtube" target="_blank" rel="noreferrer"><img src="https://img.shields.io/packagist/v/escolalms/youtube" alt="downloads"></a><a href="https://packagist.org/packages/escolalms/youtube" target="_blank" rel="noreferrer"><img src="https://img.shields.io/packagist/l/escolalms/youtube" alt="downloads"></a><a href="https://codeclimate.com/github/EscolaLMS/Youtube/maintainability" target="_blank" rel="noreferrer"><img src="https://api.codeclimate.com/v1/badges/0fe584397e06ef32618f/maintainability" alt="Maintainability"></a><a href="https://codeclimate.com/github/EscolaLMS/Youtube/test_coverage" target="_blank" rel="noreferrer"><img src="https://api.codeclimate.com/v1/badges/0fe584397e06ef32618f/test_coverage" alt="Test Coverage"></a></p><h2 id="what-does-it-do" tabindex="-1">What does it do <a class="header-anchor" href="#what-does-it-do" aria-label="Permalink to &quot;What does it do&quot;">​</a></h2><p>This package is used for creating Youtube livestream for Webinar in EscolaLms.</p><h2 id="installing" tabindex="-1">Installing <a class="header-anchor" href="#installing" aria-label="Permalink to &quot;Installing&quot;">​</a></h2><ul><li><code>composer require escolalms/youtube</code></li><li>configure integration in <a href="https://console.cloud.google.com/" target="_blank" rel="noreferrer">https://console.cloud.google.com/</a></li></ul><h2 id="configuration-in-console-cloude-youtube" tabindex="-1">Configuration in console cloude youtube <a class="header-anchor" href="#configuration-in-console-cloude-youtube" aria-label="Permalink to &quot;Configuration in console cloude youtube&quot;">​</a></h2><p>Login in console cloud google and create new project <img src="https://raw.githubusercontent.com/EscolaLMS/Youtube/main/docs/create_new_project_in_google_console.png" alt="Create new project in google console" title="Create new project in google console"> After created project got to the interfaces api and enable YouTube Data API v3 <img src="https://raw.githubusercontent.com/EscolaLMS/Youtube/main/docs/enable_yt_data_api.png" alt="Enable interface Youtube data api" title="Enable interface Youtube data api"></p><p><img src="https://raw.githubusercontent.com/EscolaLMS/Youtube/main/docs/login_data.png" alt="Copy Login data from youtube api" title="Copy Login data from youtube api"> Go to Login Data and create Api key and OAuth 2.0 client IDs and enter data for variables:</p><ul><li><code>services.youtube.client_id</code></li><li><code>services.youtube.client_secret</code></li><li><code>services.youtube.api_key</code></li><li><code>services.youtube.redirect_url</code></li></ul><p>After entered data, you must generate refresh token. If you generated refresh token with api from endpoints:</p><ul><li><code>api/admin/g-token/generate POST {&quot;email&quot;: &quot;email&quot;} AUTHORIZE</code> and opened generated url and follow the instructions</li><li>After action upper yt generated refresh token for variable <code>services.youtube.refresh_token</code> Or you can generated refresh token manual and enter for variable <code>services.youtube.refresh_token</code></li></ul><h2 id="tests" tabindex="-1">Tests <a class="header-anchor" href="#tests" aria-label="Permalink to &quot;Tests&quot;">​</a></h2><p>Run <code>./vendor/bin/phpunit --filter=Youtube</code> to run tests. See <a href="https://github.com/EscolaLMS/Youtube/tree/main/tests" target="_blank" rel="noreferrer">tests</a> folder as it&#39;s quite good staring point as documentation appendix.</p><p>Test details <a href="https://codecov.io/gh/EscolaLMS/Youtube" target="_blank" rel="noreferrer"><img src="https://codecov.io/gh/EscolaLMS/Youtube/branch/main/graph/badge.svg?token=NRAN4R8AGZ" alt="codecov"></a> <a href="https://github.com/EscolaLMS/Youtube/actions/workflows/test.yml" target="_blank" rel="noreferrer"><img src="https://github.com/EscolaLMS/Youtube/actions/workflows/test.yml/badge.svg" alt="phpunit"></a></p>',16),i=[s];function n(c,l,u,d,g,h){return t(),o("div",null,i)}const m=e(r,[["render",n]]);export{b as __pageData,m as default};
